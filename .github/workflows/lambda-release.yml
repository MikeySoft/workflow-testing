name: Build Lambda Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-lambda:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Create build folder
        run: |
          rm -rf build
          mkdir build

      - name: Install requirements in build folder
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt --target build/

      - name: Copy source code and requirements.txt
        run: |
          cp -r app/* build/
          cp app/requirements.txt build/

      - name: Zip build folder
        run: |
          cd build
          zip -r ../lambda_build.zip .

      - name: Auto-increment release version
        id: version
        run: |
          VERSION_FILE=version.txt
          if [ -f "$VERSION_FILE" ]; then
            VERSION=$(cat $VERSION_FILE)
          else
            VERSION="1.0.0"
          fi
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          PATCH=$((PATCH+1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "$NEW_VERSION" > $VERSION_FILE
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create base64 hash of zip
        run: |
          base64 lambda_build.zip > lambda_build.zip.b64

      - name: Create GitHub Release and Upload Artifacts
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.version.outputs.version }}
          name: Lambda Release v${{ steps.version.outputs.version }}
          artifacts: |
            lambda_build.zip
            lambda_build.zip.b64
          token: ${{ secrets.GITHUB_TOKEN }}
